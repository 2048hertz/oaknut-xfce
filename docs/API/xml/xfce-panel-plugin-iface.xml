<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="XfcePanelPlugin">
<refmeta>
<refentrytitle role="top_of_page">XfcePanelPlugin</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBXFCE4PANEL Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>XfcePanelPlugin</refname>
<refpurpose><para>
Panel plugin interface.
</para></refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>



            <link linkend="XfcePanelPlugin-struct">XfcePanelPlugin</link>;
<link linkend="void">void</link>        (<link linkend="XfcePanelPluginFunc">*XfcePanelPluginFunc</link>)          (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin);
<link linkend="gboolean">gboolean</link>    (<link linkend="XfcePanelPluginCheck">*XfcePanelPluginCheck</link>)         (<link linkend="GdkScreen">GdkScreen</link> *screen);
<link linkend="gchar">gchar</link>*      <link linkend="xfce-panel-plugin-get-name">xfce_panel_plugin_get_name</link>      (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin);
<link linkend="gchar">gchar</link>*      <link linkend="xfce-panel-plugin-get-id">xfce_panel_plugin_get_id</link>        (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin);
<link linkend="gchar">gchar</link>*      <link linkend="xfce-panel-plugin-get-display-name">xfce_panel_plugin_get_display_name</link>
                                            (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin);
<link linkend="int">int</link>         <link linkend="xfce-panel-plugin-get-size">xfce_panel_plugin_get_size</link>      (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin);
<link linkend="XfceScreenPosition">XfceScreenPosition</link> <link linkend="xfce-panel-plugin-get-screen-position">xfce_panel_plugin_get_screen_position</link>
                                            (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin);
<link linkend="void">void</link>        <link linkend="xfce-panel-plugin-set-expand">xfce_panel_plugin_set_expand</link>    (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin,
                                             <link linkend="gboolean">gboolean</link> expand);
<link linkend="gboolean">gboolean</link>    <link linkend="xfce-panel-plugin-get-expand">xfce_panel_plugin_get_expand</link>    (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin);
<link linkend="GtkOrientation">GtkOrientation</link> <link linkend="xfce-panel-plugin-get-orientation">xfce_panel_plugin_get_orientation</link>
                                            (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin);
<link linkend="void">void</link>        <link linkend="xfce-panel-plugin-add-action-widget">xfce_panel_plugin_add_action_widget</link>
                                            (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin,
                                             <link linkend="GtkWidget">GtkWidget</link> *widget);
<link linkend="void">void</link>        <link linkend="xfce-panel-plugin-menu-insert-item">xfce_panel_plugin_menu_insert_item</link>
                                            (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin,
                                             <link linkend="GtkMenuItem">GtkMenuItem</link> *item);
<link linkend="void">void</link>        <link linkend="xfce-panel-plugin-menu-show-about">xfce_panel_plugin_menu_show_about</link>
                                            (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin);
<link linkend="void">void</link>        <link linkend="xfce-panel-plugin-menu-show-configure">xfce_panel_plugin_menu_show_configure</link>
                                            (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin);
<link linkend="void">void</link>        <link linkend="xfce-panel-plugin-block-menu">xfce_panel_plugin_block_menu</link>    (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin);
<link linkend="void">void</link>        <link linkend="xfce-panel-plugin-unblock-menu">xfce_panel_plugin_unblock_menu</link>  (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin);
<link linkend="void">void</link>        <link linkend="xfce-panel-plugin-register-menu">xfce_panel_plugin_register_menu</link> (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin,
                                             <link linkend="GtkMenu">GtkMenu</link> *menu);
<link linkend="char">char</link>*       <link linkend="xfce-panel-plugin-lookup-rc-file">xfce_panel_plugin_lookup_rc_file</link>
                                            (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin);
<link linkend="char">char</link>*       <link linkend="xfce-panel-plugin-save-location">xfce_panel_plugin_save_location</link> (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin,
                                             <link linkend="gboolean">gboolean</link> create);
<link linkend="void">void</link>        <link linkend="xfce-panel-plugin-focus-widget">xfce_panel_plugin_focus_widget</link>  (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin,
                                             <link linkend="GtkWidget">GtkWidget</link> *widget);
<link linkend="void">void</link>        <link linkend="xfce-panel-plugin-set-panel-hidden">xfce_panel_plugin_set_panel_hidden</link>
                                            (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin,
                                             <link linkend="gboolean">gboolean</link> hidden);

</synopsis>
</refsynopsisdiv>

<refsect1 role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>

  <link linkend="GInterface">GInterface</link>
   +----XfcePanelPlugin
</synopsis>

</refsect1>

<refsect1 role="prerequisites">
<title role="prerequisites.title">Prerequisites</title>
<para>
XfcePanelPlugin requires
 <link linkend="GtkContainer">GtkContainer</link>.</para>

</refsect1>



<refsect1 role="implementations">
<title role="implementations.title">Known Implementations</title>
<para>
XfcePanelPlugin is implemented by
 <link linkend="XfceExternalPanelPlugin">XfceExternalPanelPlugin</link> and  <link linkend="XfceInternalPanelPlugin">XfceInternalPanelPlugin</link>.</para>

</refsect1>

<refsect1 role="properties">
<title role="properties.title">Properties</title>
<synopsis>

  &quot;<link linkend="XfcePanelPlugin--display-name">display-name</link>&quot;         <link linkend="gchararray">gchararray</link>            : Read
  &quot;<link linkend="XfcePanelPlugin--expand">expand</link>&quot;               <link linkend="gboolean">gboolean</link>              : Read / Write
  &quot;<link linkend="XfcePanelPlugin--id">id</link>&quot;                   <link linkend="gchararray">gchararray</link>            : Read
  &quot;<link linkend="XfcePanelPlugin--name">name</link>&quot;                 <link linkend="gchararray">gchararray</link>            : Read
  &quot;<link linkend="XfcePanelPlugin--screen-position">screen-position</link>&quot;      <link linkend="XfceScreenPosition">XfceScreenPosition</link>    : Read
  &quot;<link linkend="XfcePanelPlugin--size">size</link>&quot;                 <link linkend="gint">gint</link>                  : Read
</synopsis>
</refsect1>

<refsect1 role="signal_proto">
<title role="signal_proto.title">Signals</title>
<synopsis>

&quot;<link linkend="XfcePanelPlugin-about">about</link>&quot;     <link linkend="void">void</link>        user_function      (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin,
                                            <link linkend="gpointer">gpointer</link>         user_data)      : Run last / No recursion / No hooks
&quot;<link linkend="XfcePanelPlugin-configure-plugin">configure-plugin</link>&quot;
            <link linkend="void">void</link>        user_function      (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin,
                                            <link linkend="gpointer">gpointer</link>         user_data)      : Run last / No recursion / No hooks
&quot;<link linkend="XfcePanelPlugin-free-data">free-data</link>&quot; <link linkend="void">void</link>        user_function      (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin,
                                            <link linkend="gpointer">gpointer</link>         user_data)      : Run last / No recursion / No hooks
&quot;<link linkend="XfcePanelPlugin-orientation-changed">orientation-changed</link>&quot;
            <link linkend="void">void</link>        user_function      (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin,
                                            <link linkend="GtkOrientation">GtkOrientation</link>  *orientation,
                                            <link linkend="gpointer">gpointer</link>         user_data)        : Run last / No recursion / No hooks
&quot;<link linkend="XfcePanelPlugin-save">save</link>&quot;      <link linkend="void">void</link>        user_function      (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin,
                                            <link linkend="gpointer">gpointer</link>         user_data)      : Run last / No recursion / No hooks
&quot;<link linkend="XfcePanelPlugin-screen-position-changed">screen-position-changed</link>&quot;
            <link linkend="void">void</link>        user_function      (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link>    *plugin,
                                            <link linkend="XfceScreenPosition">XfceScreenPosition</link> *position,
                                            <link linkend="gpointer">gpointer</link>            user_data)      : Run last / No recursion / No hooks
&quot;<link linkend="XfcePanelPlugin-size-changed">size-changed</link>&quot;
            <link linkend="gboolean">gboolean</link>    user_function      (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin,
                                            <link linkend="gint">gint</link>             size,
                                            <link linkend="gpointer">gpointer</link>         user_data)      : Run last / No recursion / No hooks
</synopsis>
</refsect1>


<refsect1 role="desc">
<title role="desc.title">Description</title>
<para>
The interface implemented by both internal and external plugins. Plugin
writers may use the functions described below to interact with the plugin
widget.
</para>
</refsect1>

<refsect1 role="details">
<title role="details.title">Details</title>
<refsect2>
<title><anchor id="XfcePanelPlugin-struct" role="struct"/>XfcePanelPlugin</title>
<indexterm><primary>XfcePanelPlugin</primary></indexterm><programlisting>typedef struct _XfcePanelPlugin XfcePanelPlugin;</programlisting>
<para>
The <link linkend="XfcePanelPlugin-struct"><type>XfcePanelPlugin</type></link> is a purely virtual object to describe an instance
of a widget implementing the panel plugin interface.
</para></refsect2>
<refsect2>
<title><anchor id="XfcePanelPluginFunc" role="function"/>XfcePanelPluginFunc ()</title>
<indexterm><primary>XfcePanelPluginFunc</primary></indexterm><programlisting><link linkend="void">void</link>        (*XfcePanelPluginFunc)          (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin);</programlisting>
<para>
Callback function to create the plugin contents. It should be given as 
the argument to the registration macros.
</para>
<para>
See also: <link linkend="XFCE-PANEL-PLUGIN-REGISTER-EXTERNAL:CAPS"><function>XFCE_PANEL_PLUGIN_REGISTER_EXTERNAL()</function></link> and
          <link linkend="XFCE-PANEL-PLUGIN-REGISTER-INTERNAL:CAPS"><function>XFCE_PANEL_PLUGIN_REGISTER_INTERNAL()</function></link></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>plugin</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="XfcePanelPlugin"><type>XfcePanelPlugin</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="XfcePanelPluginCheck" role="function"/>XfcePanelPluginCheck ()</title>
<indexterm><primary>XfcePanelPluginCheck</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    (*XfcePanelPluginCheck)         (<link linkend="GdkScreen">GdkScreen</link> *screen);</programlisting>
<para>
Callback function that is run before creating a plugin. It should return
if the plugin is not available for whatever reason. It should be given as 
the argument to the registration macros.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>screen</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="GdkScreen"><type>GdkScreen</type></link> that the plugin should be run on.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the plugin can be started, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> other wise.

See also: <link linkend="XFCE-PANEL-PLUGIN-REGISTER-EXTERNAL-WITH-CHECK:CAPS"><function>XFCE_PANEL_PLUGIN_REGISTER_EXTERNAL_WITH_CHECK()</function></link> and
          <link linkend="XFCE-PANEL-PLUGIN-REGISTER-INTERNAL-WITH-CHECK:CAPS"><function>XFCE_PANEL_PLUGIN_REGISTER_INTERNAL_WITH_CHECK()</function></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xfce-panel-plugin-get-name" role="function"/>xfce_panel_plugin_get_name ()</title>
<indexterm><primary>xfce_panel_plugin_get_name</primary></indexterm><programlisting><link linkend="gchar">gchar</link>*      xfce_panel_plugin_get_name      (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin);</programlisting>
<para>
The plugin name identifies a plugin type and therefore must be unique.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>plugin</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="XfcePanelPlugin"><type>XfcePanelPlugin</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the plugin name.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xfce-panel-plugin-get-id" role="function"/>xfce_panel_plugin_get_id ()</title>
<indexterm><primary>xfce_panel_plugin_get_id</primary></indexterm><programlisting><link linkend="gchar">gchar</link>*      xfce_panel_plugin_get_id        (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin);</programlisting>
<para>
The plugin id is a unique identifier string that is given to every instance
of a panel plugin.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>plugin</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="XfcePanelPlugin"><type>XfcePanelPlugin</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the plugin id.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xfce-panel-plugin-get-display-name" role="function"/>xfce_panel_plugin_get_display_name ()</title>
<indexterm><primary>xfce_panel_plugin_get_display_name</primary></indexterm><programlisting><link linkend="gchar">gchar</link>*      xfce_panel_plugin_get_display_name
                                            (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin);</programlisting>
<para>
The display name is the (translated) plugin name that can be used in a user
interface, e.g. a dialog or a menu.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>plugin</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="XfcePanelPlugin"><type>XfcePanelPlugin</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the display name of <parameter>plugin</parameter>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xfce-panel-plugin-get-size" role="function"/>xfce_panel_plugin_get_size ()</title>
<indexterm><primary>xfce_panel_plugin_get_size</primary></indexterm><programlisting><link linkend="int">int</link>         xfce_panel_plugin_get_size      (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>plugin</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="XfcePanelPlugin"><type>XfcePanelPlugin</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the current panel size.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xfce-panel-plugin-get-screen-position" role="function"/>xfce_panel_plugin_get_screen_position ()</title>
<indexterm><primary>xfce_panel_plugin_get_screen_position</primary></indexterm><programlisting><link linkend="XfceScreenPosition">XfceScreenPosition</link> xfce_panel_plugin_get_screen_position
                                            (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>plugin</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="XfcePanelPlugin"><type>XfcePanelPlugin</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the current <link linkend="XfceScreenPosition"><type>XfceScreenPosition</type></link> of the panel.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xfce-panel-plugin-set-expand" role="function"/>xfce_panel_plugin_set_expand ()</title>
<indexterm><primary>xfce_panel_plugin_set_expand</primary></indexterm><programlisting><link linkend="void">void</link>        xfce_panel_plugin_set_expand    (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin,
                                             <link linkend="gboolean">gboolean</link> expand);</programlisting>
<para>
Sets whether to expand the plugin when the width of the panel increases.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>plugin</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="XfcePanelPlugin"><type>XfcePanelPlugin</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>expand</parameter>&nbsp;:</term>
<listitem><simpara> whether to expand the plugin
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xfce-panel-plugin-get-expand" role="function"/>xfce_panel_plugin_get_expand ()</title>
<indexterm><primary>xfce_panel_plugin_get_expand</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    xfce_panel_plugin_get_expand    (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>plugin</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="XfcePanelPlugin"><type>XfcePanelPlugin</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> whether the plugin will expand when the panel width increases.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xfce-panel-plugin-get-orientation" role="function"/>xfce_panel_plugin_get_orientation ()</title>
<indexterm><primary>xfce_panel_plugin_get_orientation</primary></indexterm><programlisting><link linkend="GtkOrientation">GtkOrientation</link> xfce_panel_plugin_get_orientation
                                            (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>plugin</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="XfcePanelPlugin"><type>XfcePanelPlugin</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the current <link linkend="GtkOrientation"><type>GtkOrientation</type></link> of the panel.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xfce-panel-plugin-add-action-widget" role="function"/>xfce_panel_plugin_add_action_widget ()</title>
<indexterm><primary>xfce_panel_plugin_add_action_widget</primary></indexterm><programlisting><link linkend="void">void</link>        xfce_panel_plugin_add_action_widget
                                            (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin,
                                             <link linkend="GtkWidget">GtkWidget</link> *widget);</programlisting>
<para>
Attach the plugin menu to this widget. Plugin writers should call this
for every widget that can receive mouse events. If you forget to call this
the plugin will not have a right-click menu and the user won't be able to
remove it.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>plugin</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="XfcePanelPlugin"><type>XfcePanelPlugin</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkWidget"><type>GtkWidget</type></link> that receives mouse events
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xfce-panel-plugin-menu-insert-item" role="function"/>xfce_panel_plugin_menu_insert_item ()</title>
<indexterm><primary>xfce_panel_plugin_menu_insert_item</primary></indexterm><programlisting><link linkend="void">void</link>        xfce_panel_plugin_menu_insert_item
                                            (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin,
                                             <link linkend="GtkMenuItem">GtkMenuItem</link> *item);</programlisting>
<para>
Insert custom menu item.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>plugin</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="XfcePanelPlugin"><type>XfcePanelPlugin</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>item</parameter>&nbsp;:</term>
<listitem><simpara> the menu item to add
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xfce-panel-plugin-menu-show-about" role="function"/>xfce_panel_plugin_menu_show_about ()</title>
<indexterm><primary>xfce_panel_plugin_menu_show_about</primary></indexterm><programlisting><link linkend="void">void</link>        xfce_panel_plugin_menu_show_about
                                            (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin);</programlisting>
<para>
Show the 'About' item in the menu. Clicking on the menu item will emit
the "about" signal.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>plugin</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="XfcePanelPlugin"><type>XfcePanelPlugin</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xfce-panel-plugin-menu-show-configure" role="function"/>xfce_panel_plugin_menu_show_configure ()</title>
<indexterm><primary>xfce_panel_plugin_menu_show_configure</primary></indexterm><programlisting><link linkend="void">void</link>        xfce_panel_plugin_menu_show_configure
                                            (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin);</programlisting>
<para>
Show the 'Configure' item in the menu. Clicking on the menu item will emit
the "configure-plugin" signal.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>plugin</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="XfcePanelPlugin"><type>XfcePanelPlugin</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xfce-panel-plugin-block-menu" role="function"/>xfce_panel_plugin_block_menu ()</title>
<indexterm><primary>xfce_panel_plugin_block_menu</primary></indexterm><programlisting><link linkend="void">void</link>        xfce_panel_plugin_block_menu    (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin);</programlisting>
<para>
Temporarily block the menu from being shown. This can be used by plugin
writers when the configuration dialog is active.
</para>
<para>
See also: <link linkend="xfce-panel-plugin-unblock-menu"><function>xfce_panel_plugin_unblock_menu()</function></link></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>plugin</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="XfcePanelPlugin"><type>XfcePanelPlugin</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xfce-panel-plugin-unblock-menu" role="function"/>xfce_panel_plugin_unblock_menu ()</title>
<indexterm><primary>xfce_panel_plugin_unblock_menu</primary></indexterm><programlisting><link linkend="void">void</link>        xfce_panel_plugin_unblock_menu  (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin);</programlisting>
<para>
Don't block the menu from being shown.
</para>
<para>
See also: <link linkend="xfce-panel-plugin-block-menu"><function>xfce_panel_plugin_block_menu()</function></link></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>plugin</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="XfcePanelPlugin"><type>XfcePanelPlugin</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xfce-panel-plugin-register-menu" role="function"/>xfce_panel_plugin_register_menu ()</title>
<indexterm><primary>xfce_panel_plugin_register_menu</primary></indexterm><programlisting><link linkend="void">void</link>        xfce_panel_plugin_register_menu (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin,
                                             <link linkend="GtkMenu">GtkMenu</link> *menu);</programlisting>
<para>
Register an open menu. This will make sure the panel will properly handle
its autohide behaviour.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>plugin</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="XfcePanelPlugin"><type>XfcePanelPlugin</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>menu</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkMenu"><type>GtkMenu</type></link> that will be opened
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xfce-panel-plugin-lookup-rc-file" role="function"/>xfce_panel_plugin_lookup_rc_file ()</title>
<indexterm><primary>xfce_panel_plugin_lookup_rc_file</primary></indexterm><programlisting><link linkend="char">char</link>*       xfce_panel_plugin_lookup_rc_file
                                            (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin);</programlisting>
<para>
Looks up unique filename associated with <parameter>plugin</parameter> in standard configuration
locations. Uses <link linkend="xfce-resource-lookup"><function>xfce_resource_lookup()</function></link> internally.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>plugin</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="XfcePanelPlugin"><type>XfcePanelPlugin</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> path to configuration file or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if none was found.  The
         returned string must be freed using <link linkend="g-free"><function>g_free()</function></link>.

See also: <link linkend="xfce-panel-plugin-save-location"><function>xfce_panel_plugin_save_location()</function></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xfce-panel-plugin-save-location" role="function"/>xfce_panel_plugin_save_location ()</title>
<indexterm><primary>xfce_panel_plugin_save_location</primary></indexterm><programlisting><link linkend="char">char</link>*       xfce_panel_plugin_save_location (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin,
                                             <link linkend="gboolean">gboolean</link> create);</programlisting>
<para>
Unique file location that can be used to store configuration information.
Uses <link linkend="xfce-resource-save-location"><function>xfce_resource_save_location()</function></link> internally.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>plugin</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="XfcePanelPlugin"><type>XfcePanelPlugin</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>create</parameter>&nbsp;:</term>
<listitem><simpara> whether the file should be created
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> path to configuration file or <link linkend="NULL:CAPS"><literal>NULL</literal></link> is the file could not be
         created. The returned string must be freed using <link linkend="g-free"><function>g_free()</function></link>.

See also: <link linkend="xfce-panel-plugin-lookup-rc-file"><function>xfce_panel_plugin_lookup_rc_file()</function></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xfce-panel-plugin-focus-widget" role="function"/>xfce_panel_plugin_focus_widget ()</title>
<indexterm><primary>xfce_panel_plugin_focus_widget</primary></indexterm><programlisting><link linkend="void">void</link>        xfce_panel_plugin_focus_widget  (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin,
                                             <link linkend="GtkWidget">GtkWidget</link> *widget);</programlisting>
<para>
Grab the focus on <parameter>widget</parameter>. Asks the panel to allow focus on its items and
set the focus to the requested widget.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>plugin</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="XfcePanelPlugin"><type>XfcePanelPlugin</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> widget to focus
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xfce-panel-plugin-set-panel-hidden" role="function"/>xfce_panel_plugin_set_panel_hidden ()</title>
<indexterm><primary>xfce_panel_plugin_set_panel_hidden</primary></indexterm><programlisting><link linkend="void">void</link>        xfce_panel_plugin_set_panel_hidden
                                            (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin,
                                             <link linkend="gboolean">gboolean</link> hidden);</programlisting>
<para>
Ask the panel to hide or unhide. This only has effect when autohide is
enabled.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>plugin</parameter>&nbsp;:</term>
<listitem><simpara> an <link linkend="XfcePanelPlugin"><type>XfcePanelPlugin</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>hidden</parameter>&nbsp;:</term>
<listitem><simpara> <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> to unhide, <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> to hide the panel
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>
<refsect1 role="property_details">
<title role="property_details.title">Property Details</title>
<refsect2><title><anchor id="XfcePanelPlugin--display-name"/>The &quot;<literal>display-name</literal>&quot; property</title>
<indexterm><primary>XfcePanelPlugin:display-name</primary></indexterm><programlisting>  &quot;display-name&quot;         <link linkend="gchararray">gchararray</link>            : Read</programlisting>
<para>
Translated plugin name. This is the name that can be presented to
the user, e.g. in dialogs or menus.</para>
<para>

</para><para>Default value: NULL</para>
</refsect2>
<refsect2><title><anchor id="XfcePanelPlugin--expand"/>The &quot;<literal>expand</literal>&quot; property</title>
<indexterm><primary>XfcePanelPlugin:expand</primary></indexterm><programlisting>  &quot;expand&quot;               <link linkend="gboolean">gboolean</link>              : Read / Write</programlisting>
<para>
Whether to expand the plugin when the panel width increases.</para>
<para>

</para><para>Default value: FALSE</para>
</refsect2>
<refsect2><title><anchor id="XfcePanelPlugin--id"/>The &quot;<literal>id</literal>&quot; property</title>
<indexterm><primary>XfcePanelPlugin:id</primary></indexterm><programlisting>  &quot;id&quot;                   <link linkend="gchararray">gchararray</link>            : Read</programlisting>
<para>
Unique identifier string created for every <link linkend="XfcePanelPlugin"><type>XfcePanelPlugin</type></link> instance.</para>
<para>

</para><para>Default value: NULL</para>
</refsect2>
<refsect2><title><anchor id="XfcePanelPlugin--name"/>The &quot;<literal>name</literal>&quot; property</title>
<indexterm><primary>XfcePanelPlugin:name</primary></indexterm><programlisting>  &quot;name&quot;                 <link linkend="gchararray">gchararray</link>            : Read</programlisting>
<para>
Untranslated plugin name. This identifies the plugin type and
therefore has to be unique.</para>
<para>

</para><para>Default value: NULL</para>
</refsect2>
<refsect2><title><anchor id="XfcePanelPlugin--screen-position"/>The &quot;<literal>screen-position</literal>&quot; property</title>
<indexterm><primary>XfcePanelPlugin:screen-position</primary></indexterm><programlisting>  &quot;screen-position&quot;      <link linkend="XfceScreenPosition">XfceScreenPosition</link>    : Read</programlisting>
<para>
The current <link linkend="XfceScreenPosition"><type>XfceScreenPosition</type></link> of the panel.</para>
<para>

</para><para>Default value: XFCE_SCREEN_POSITION_S</para>
</refsect2>
<refsect2><title><anchor id="XfcePanelPlugin--size"/>The &quot;<literal>size</literal>&quot; property</title>
<indexterm><primary>XfcePanelPlugin:size</primary></indexterm><programlisting>  &quot;size&quot;                 <link linkend="gint">gint</link>                  : Read</programlisting>
<para>
The current panel size.</para>
<para>

</para><para>Allowed values: [10,128]</para>
<para>Default value: 32</para>
</refsect2>

</refsect1>

<refsect1 role="signals">
<title role="signals.title">Signal Details</title>
<refsect2><title><anchor id="XfcePanelPlugin-about"/>The &quot;about&quot; signal</title>
<indexterm><primary>XfcePanelPlugin::about</primary></indexterm><programlisting><link linkend="void">void</link>        user_function                  (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin,
                                            <link linkend="gpointer">gpointer</link>         user_data)      : Run last / No recursion / No hooks</programlisting>
<para>
Emitted when the 'About' menu item is clicked. Plugin writers
should connect to this signal to show information about their
plugin (and its authors).
</para>
<para>
See also: <link linkend="xfce-panel-plugin-menu-show-about"><function>xfce_panel_plugin_menu_show_about()</function></link></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>plugin</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="XfcePanelPlugin"><type>XfcePanelPlugin</type></link> widget
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="XfcePanelPlugin-configure-plugin"/>The &quot;configure-plugin&quot; signal</title>
<indexterm><primary>XfcePanelPlugin::configure-plugin</primary></indexterm><programlisting><link linkend="void">void</link>        user_function                  (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin,
                                            <link linkend="gpointer">gpointer</link>         user_data)      : Run last / No recursion / No hooks</programlisting>
<para>
Emitted when the 'Configure' menu item is clicked. Plugin writers
should connect to this signal to show a settings dialog.
</para>
<para>
See also: <link linkend="xfce-panel-plugin-menu-show-configure"><function>xfce_panel_plugin_menu_show_configure()</function></link></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>plugin</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="XfcePanelPlugin"><type>XfcePanelPlugin</type></link> widget
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="XfcePanelPlugin-free-data"/>The &quot;free-data&quot; signal</title>
<indexterm><primary>XfcePanelPlugin::free-data</primary></indexterm><programlisting><link linkend="void">void</link>        user_function                  (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin,
                                            <link linkend="gpointer">gpointer</link>         user_data)      : Run last / No recursion / No hooks</programlisting>
<para>
Emitted when the panel is closing. Plugin writers should connect to
this signal to free any allocated resources.
</para>
<para>
See also: <link linkend="XfcePanelPlugin-save"><type>XfcePanelPlugin::save</type></link></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>plugin</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="XfcePanelPlugin"><type>XfcePanelPlugin</type></link> widget
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="XfcePanelPlugin-orientation-changed"/>The &quot;orientation-changed&quot; signal</title>
<indexterm><primary>XfcePanelPlugin::orientation-changed</primary></indexterm><programlisting><link linkend="void">void</link>        user_function                  (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin,
                                            <link linkend="GtkOrientation">GtkOrientation</link>  *orientation,
                                            <link linkend="gpointer">gpointer</link>         user_data)        : Run last / No recursion / No hooks</programlisting>
<para>
Emitted when the panel orientation changes.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>plugin</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="XfcePanelPlugin"><type>XfcePanelPlugin</type></link> widget
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>orientation</parameter>&nbsp;:</term>
<listitem><simpara> new <link linkend="GtkOrientation"><type>GtkOrientation</type></link> of the panel
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="XfcePanelPlugin-save"/>The &quot;save&quot; signal</title>
<indexterm><primary>XfcePanelPlugin::save</primary></indexterm><programlisting><link linkend="void">void</link>        user_function                  (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin,
                                            <link linkend="gpointer">gpointer</link>         user_data)      : Run last / No recursion / No hooks</programlisting>
<para>
Emitted before the panel is closing. May be called more than once
while the panel is running. Plugin writers should connect to
this signal to save the plugins configuration.
</para>
<para>
See also: <link linkend="xfce-panel-plugin-get-rc-file"><function>xfce_panel_plugin_get_rc_file()</function></link></para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>plugin</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="XfcePanelPlugin"><type>XfcePanelPlugin</type></link> widget
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="XfcePanelPlugin-screen-position-changed"/>The &quot;screen-position-changed&quot; signal</title>
<indexterm><primary>XfcePanelPlugin::screen-position-changed</primary></indexterm><programlisting><link linkend="void">void</link>        user_function                  (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link>    *plugin,
                                            <link linkend="XfceScreenPosition">XfceScreenPosition</link> *position,
                                            <link linkend="gpointer">gpointer</link>            user_data)      : Run last / No recursion / No hooks</programlisting>
<para>
Emitted when the screen position changes. Most plugins will be
more interested in the "orientation-changed" signal.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>plugin</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="XfcePanelPlugin"><type>XfcePanelPlugin</type></link> widget
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>position</parameter>&nbsp;:</term>
<listitem><simpara> new <link linkend="XfceScreenPosition"><type>XfceScreenPosition</type></link> of the panel
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="XfcePanelPlugin-size-changed"/>The &quot;size-changed&quot; signal</title>
<indexterm><primary>XfcePanelPlugin::size-changed</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    user_function                  (<link linkend="XfcePanelPlugin">XfcePanelPlugin</link> *plugin,
                                            <link linkend="gint">gint</link>             size,
                                            <link linkend="gpointer">gpointer</link>         user_data)      : Run last / No recursion / No hooks</programlisting>
<para>
Emitted when the panel size changes. By default a plugin will
get a geometry of <parameter>size</parameter> x <parameter>size</parameter>. This means that a plugin writer
must handle this signal for any other behavior, even to 'do nothing'.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>plugin</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="XfcePanelPlugin"><type>XfcePanelPlugin</type></link> widget
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>size</parameter>&nbsp;:</term>
<listitem><simpara> new panel size
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> A callback function should return <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> when the signal
              is handled and <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> otherwise, in which case the
              default handler will run.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>


<refsect1>
<title>See Also</title>
<para>
<link linkend="libxfce4panel-Writing-Plugins">Writing Plugins</link>
</para>
</refsect1>

</refentry>
