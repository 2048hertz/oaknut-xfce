<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="XfcePanelWindow">
<refmeta>
<refentrytitle>XfcePanelWindow</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBXFCE4PANEL Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>XfcePanelWindow</refname><refpurpose><para>
A toplevel borderless window with optional move handles.
</para></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>



            <link linkend="XfcePanelWindow-struct">XfcePanelWindow</link>;
enum        <link linkend="XfceHandleStyle">XfceHandleStyle</link>;
<link linkend="void">void</link>        (<link linkend="XfcePanelWindowMoveFunc">*XfcePanelWindowMoveFunc</link>)      (<link linkend="GtkWidget">GtkWidget</link> *widget,
                                             <link linkend="gpointer">gpointer</link> data,
                                             <link linkend="int">int</link> *x,
                                             <link linkend="int">int</link> *y);
<link linkend="void">void</link>        (<link linkend="XfcePanelWindowResizeFunc">*XfcePanelWindowResizeFunc</link>)    (<link linkend="GtkWidget">GtkWidget</link> *widget,
                                             <link linkend="gpointer">gpointer</link> data,
                                             <link linkend="GtkAllocation">GtkAllocation</link> *previous,
                                             <link linkend="GtkAllocation">GtkAllocation</link> *allocation,
                                             <link linkend="int">int</link> *x,
                                             <link linkend="int">int</link> *y);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="xfce-panel-window-new">xfce_panel_window_new</link>           (void);
<link linkend="void">void</link>        <link linkend="xfce-panel-window-set-orientation">xfce_panel_window_set_orientation</link>
                                            (<link linkend="XfcePanelWindow">XfcePanelWindow</link> *window,
                                             <link linkend="GtkOrientation">GtkOrientation</link> orientation);
<link linkend="GtkOrientation">GtkOrientation</link> <link linkend="xfce-panel-window-get-orientation">xfce_panel_window_get_orientation</link>
                                            (<link linkend="XfcePanelWindow">XfcePanelWindow</link> *window);
<link linkend="void">void</link>        <link linkend="xfce-panel-window-set-handle-style">xfce_panel_window_set_handle_style</link>
                                            (<link linkend="XfcePanelWindow">XfcePanelWindow</link> *window,
                                             <link linkend="XfceHandleStyle">XfceHandleStyle</link> handle_style);
<link linkend="XfceHandleStyle">XfceHandleStyle</link> <link linkend="xfce-panel-window-get-handle-style">xfce_panel_window_get_handle_style</link>
                                            (<link linkend="XfcePanelWindow">XfcePanelWindow</link> *window);
<link linkend="void">void</link>        <link linkend="xfce-panel-window-set-show-border">xfce_panel_window_set_show_border</link>
                                            (<link linkend="XfcePanelWindow">XfcePanelWindow</link> *window,
                                             <link linkend="gboolean">gboolean</link> top_border,
                                             <link linkend="gboolean">gboolean</link> bottom_border,
                                             <link linkend="gboolean">gboolean</link> left_border,
                                             <link linkend="gboolean">gboolean</link> right_border);
<link linkend="void">void</link>        <link linkend="xfce-panel-window-get-show-border">xfce_panel_window_get_show_border</link>
                                            (<link linkend="XfcePanelWindow">XfcePanelWindow</link> *window,
                                             <link linkend="gboolean">gboolean</link> *top_border,
                                             <link linkend="gboolean">gboolean</link> *bottom_border,
                                             <link linkend="gboolean">gboolean</link> *left_border,
                                             <link linkend="gboolean">gboolean</link> *right_border);
<link linkend="void">void</link>        <link linkend="xfce-panel-window-set-resize-function">xfce_panel_window_set_resize_function</link>
                                            (<link linkend="XfcePanelWindow">XfcePanelWindow</link> *window,
                                             <link linkend="XfcePanelWindowResizeFunc">XfcePanelWindowResizeFunc</link> function,
                                             <link linkend="gpointer">gpointer</link> data);
<link linkend="void">void</link>        <link linkend="xfce-panel-window-set-move-function">xfce_panel_window_set_move_function</link>
                                            (<link linkend="XfcePanelWindow">XfcePanelWindow</link> *window,
                                             <link linkend="XfcePanelWindowMoveFunc">XfcePanelWindowMoveFunc</link> function,
                                             <link linkend="gpointer">gpointer</link> data);
<link linkend="void">void</link>        <link linkend="xfce-panel-window-set-movable">xfce_panel_window_set_movable</link>   (<link linkend="XfcePanelWindow">XfcePanelWindow</link> *window,
                                             <link linkend="gboolean">gboolean</link> movable);
<link linkend="gboolean">gboolean</link>    <link linkend="xfce-panel-window-get-movable">xfce_panel_window_get_movable</link>   (<link linkend="XfcePanelWindow">XfcePanelWindow</link> *window);

</synopsis>
</refsynopsisdiv>

<refsect1>
<title>Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----<link linkend="GtkObject">GtkObject</link>
         +----<link linkend="GtkWidget">GtkWidget</link>
               +----<link linkend="GtkContainer">GtkContainer</link>
                     +----<link linkend="GtkBin">GtkBin</link>
                           +----<link linkend="GtkWindow">GtkWindow</link>
                                 +----XfcePanelWindow
</synopsis>

</refsect1>



<refsect1>
<title>Implemented Interfaces</title>
<para>
XfcePanelWindow implements
 <link linkend="AtkImplementorIface">AtkImplementorIface</link>.</para>

</refsect1>


<refsect1>
<title>Properties</title>
<synopsis>

  &quot;<link linkend="XfcePanelWindow--handle-style">handle-style</link>&quot;         <link linkend="XfceHandleStyle">XfceHandleStyle</link>       : Read / Write
  &quot;<link linkend="XfcePanelWindow--orientation">orientation</link>&quot;          <link linkend="GtkOrientation">GtkOrientation</link>        : Read / Write
</synopsis>
</refsect1>

<refsect1>
<title>Signal Prototypes</title>
<synopsis>

&quot;<link linkend="XfcePanelWindow-move">move</link>&quot;      <link linkend="void">void</link>        user_function      (<link linkend="XfcePanelWindow">XfcePanelWindow</link> *window,
                                            <link linkend="gint">gint</link> x,
                                            <link linkend="gint">gint</link> y,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="XfcePanelWindow-move-end">move-end</link>&quot;  <link linkend="void">void</link>        user_function      (<link linkend="XfcePanelWindow">XfcePanelWindow</link> *window,
                                            <link linkend="gint">gint</link> x,
                                            <link linkend="gint">gint</link> y,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="XfcePanelWindow-move-start">move-start</link>&quot;
            <link linkend="void">void</link>        user_function      (<link linkend="XfcePanelWindow">XfcePanelWindow</link> *window,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="XfcePanelWindow-orientation-changed">orientation-changed</link>&quot;
            <link linkend="void">void</link>        user_function      (<link linkend="XfcePanelWindow">XfcePanelWindow</link> *window,
                                            <link linkend="GtkOrientation">GtkOrientation</link> orientation,
                                            <link linkend="gpointer">gpointer</link> user_data);
</synopsis>
</refsect1>


<refsect1>
<title>Description</title>
<para>
A widget derived from <link linkend="GtkWindow"><type>GtkWindow</type></link> that implements a toplevel window for panels.
It optionally can have one or two move handles.
</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="XfcePanelWindow-struct"/>XfcePanelWindow</title>
<indexterm><primary>XfcePanelWindow</primary></indexterm><programlisting>typedef struct _XfcePanelWindow XfcePanelWindow;</programlisting>
<para>
The <link linkend="XfcePanelWindow-struct"><type>XfcePanelWindow-struct</type></link> struct contains private data only, and
should be accessed using the functions below.
</para></refsect2>
<refsect2>
<title><anchor id="XfceHandleStyle"/>enum XfceHandleStyle</title>
<indexterm><primary>XfceHandleStyle</primary></indexterm><programlisting>typedef enum /*&lt;enum,prefix=XFCE_HANDLE_STYLE &gt;*/
{
    XFCE_HANDLE_STYLE_NONE,
    XFCE_HANDLE_STYLE_BOTH,
    XFCE_HANDLE_STYLE_START,
    XFCE_HANDLE_STYLE_END
}
XfceHandleStyle;
</programlisting>
<para>
Style of the handles on an <link linkend="XfcePanelWindow"><type>XfcePanelWindow</type></link>.</para>
<para>

</para><variablelist role="enum">
<varlistentry>
<term><literal>XFCE_HANDLE_STYLE_NONE</literal></term>
<listitem><simpara> No handles.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>XFCE_HANDLE_STYLE_BOTH</literal></term>
<listitem><simpara> Two handles, one on each side.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>XFCE_HANDLE_STYLE_START</literal></term>
<listitem><simpara> One handle at the start.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>XFCE_HANDLE_STYLE_END</literal></term>
<listitem><simpara> One handle at the end.
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="XfcePanelWindowMoveFunc"/>XfcePanelWindowMoveFunc ()</title>
<indexterm><primary>XfcePanelWindowMoveFunc</primary></indexterm><programlisting><link linkend="void">void</link>        (*XfcePanelWindowMoveFunc)      (<link linkend="GtkWidget">GtkWidget</link> *widget,
                                             <link linkend="gpointer">gpointer</link> data,
                                             <link linkend="int">int</link> *x,
                                             <link linkend="int">int</link> *y);</programlisting>
<para>
Callback function that can be used to restrict manual movement of the
<link linkend="XfcePanelWindow"><type>XfcePanelWindow</type></link>. The function should modify <parameter>x</parameter> and <parameter>y</parameter> to set the new
position.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="XfcePanelWindow"><type>XfcePanelWindow</type></link> widget
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara> user data supplied with the function
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> location of the new x coordinate
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> location of the new y coordinate
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="XfcePanelWindowResizeFunc"/>XfcePanelWindowResizeFunc ()</title>
<indexterm><primary>XfcePanelWindowResizeFunc</primary></indexterm><programlisting><link linkend="void">void</link>        (*XfcePanelWindowResizeFunc)    (<link linkend="GtkWidget">GtkWidget</link> *widget,
                                             <link linkend="gpointer">gpointer</link> data,
                                             <link linkend="GtkAllocation">GtkAllocation</link> *previous,
                                             <link linkend="GtkAllocation">GtkAllocation</link> *allocation,
                                             <link linkend="int">int</link> *x,
                                             <link linkend="int">int</link> *y);</programlisting>
<para>
Callback function that can be used to adjust the position of the
<link linkend="XfcePanelWindow"><type>XfcePanelWindow</type></link> when its size changes. The function should modify <parameter>x</parameter> 
and <parameter>y</parameter> to set the new position.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>widget</parameter>&nbsp;:</term>
<listitem><simpara> The <link linkend="XfcePanelWindow"><type>XfcePanelWindow</type></link> widget
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara> user data supplied with the function
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>previous</parameter>&nbsp;:</term>
<listitem><simpara> Old <link linkend="GtkAllocation"><type>GtkAllocation</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>allocation</parameter>&nbsp;:</term>
<listitem><simpara> New <link linkend="GtkAllocation"><type>GtkAllocation</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> location of the new x coordinate
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> location of the new y coordinate
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xfce-panel-window-new"/>xfce_panel_window_new ()</title>
<indexterm><primary>xfce_panel_window_new</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link>*  xfce_panel_window_new           (void);</programlisting>
<para>
Create new panel window.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> New <link linkend="GtkWidget"><type>GtkWidget</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xfce-panel-window-set-orientation"/>xfce_panel_window_set_orientation ()</title>
<indexterm><primary>xfce_panel_window_set_orientation</primary></indexterm><programlisting><link linkend="void">void</link>        xfce_panel_window_set_orientation
                                            (<link linkend="XfcePanelWindow">XfcePanelWindow</link> *window,
                                             <link linkend="GtkOrientation">GtkOrientation</link> orientation);</programlisting>
<para>
Set orientation for panel window.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> <link linkend="XfcePanelWindow"><type>XfcePanelWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>orientation</parameter>&nbsp;:</term>
<listitem><simpara> new <link linkend="GtkOrientation"><type>GtkOrientation</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xfce-panel-window-get-orientation"/>xfce_panel_window_get_orientation ()</title>
<indexterm><primary>xfce_panel_window_get_orientation</primary></indexterm><programlisting><link linkend="GtkOrientation">GtkOrientation</link> xfce_panel_window_get_orientation
                                            (<link linkend="XfcePanelWindow">XfcePanelWindow</link> *window);</programlisting>
<para>
Get orientation of panel window.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> <link linkend="XfcePanelWindow"><type>XfcePanelWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="GtkOrientation"><type>GtkOrientation</type></link> of <parameter>window</parameter>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xfce-panel-window-set-handle-style"/>xfce_panel_window_set_handle_style ()</title>
<indexterm><primary>xfce_panel_window_set_handle_style</primary></indexterm><programlisting><link linkend="void">void</link>        xfce_panel_window_set_handle_style
                                            (<link linkend="XfcePanelWindow">XfcePanelWindow</link> *window,
                                             <link linkend="XfceHandleStyle">XfceHandleStyle</link> handle_style);</programlisting>
<para>
Set handle style for panel window.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> <link linkend="XfcePanelWindow"><type>XfcePanelWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>handle_style</parameter>&nbsp;:</term>
<listitem><simpara> new <link linkend="XfceHandleStyle"><type>XfceHandleStyle</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xfce-panel-window-get-handle-style"/>xfce_panel_window_get_handle_style ()</title>
<indexterm><primary>xfce_panel_window_get_handle_style</primary></indexterm><programlisting><link linkend="XfceHandleStyle">XfceHandleStyle</link> xfce_panel_window_get_handle_style
                                            (<link linkend="XfcePanelWindow">XfcePanelWindow</link> *window);</programlisting>
<para>
Get handle style of panel window.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> <link linkend="XfcePanelWindow"><type>XfcePanelWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="XfceHandleStyle"><type>XfceHandleStyle</type></link> of <parameter>window</parameter>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xfce-panel-window-set-show-border"/>xfce_panel_window_set_show_border ()</title>
<indexterm><primary>xfce_panel_window_set_show_border</primary></indexterm><programlisting><link linkend="void">void</link>        xfce_panel_window_set_show_border
                                            (<link linkend="XfcePanelWindow">XfcePanelWindow</link> *window,
                                             <link linkend="gboolean">gboolean</link> top_border,
                                             <link linkend="gboolean">gboolean</link> bottom_border,
                                             <link linkend="gboolean">gboolean</link> left_border,
                                             <link linkend="gboolean">gboolean</link> right_border);</programlisting>
<para>
Set border visibility for the panel window.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> <link linkend="XfcePanelWindow"><type>XfcePanelWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>top_border</parameter>&nbsp;:</term>
<listitem><simpara> show top border
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bottom_border</parameter>&nbsp;:</term>
<listitem><simpara> show bottom border
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>left_border</parameter>&nbsp;:</term>
<listitem><simpara> show left border
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>right_border</parameter>&nbsp;:</term>
<listitem><simpara> show right border
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xfce-panel-window-get-show-border"/>xfce_panel_window_get_show_border ()</title>
<indexterm><primary>xfce_panel_window_get_show_border</primary></indexterm><programlisting><link linkend="void">void</link>        xfce_panel_window_get_show_border
                                            (<link linkend="XfcePanelWindow">XfcePanelWindow</link> *window,
                                             <link linkend="gboolean">gboolean</link> *top_border,
                                             <link linkend="gboolean">gboolean</link> *bottom_border,
                                             <link linkend="gboolean">gboolean</link> *left_border,
                                             <link linkend="gboolean">gboolean</link> *right_border);</programlisting>
<para>
Get visibility of panel window borders.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> <link linkend="XfcePanelWindow"><type>XfcePanelWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>top_border</parameter>&nbsp;:</term>
<listitem><simpara> location for top border or <literal>NULL</literal>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bottom_border</parameter>&nbsp;:</term>
<listitem><simpara> location for bottom border or <literal>NULL</literal>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>left_border</parameter>&nbsp;:</term>
<listitem><simpara> location for left border or <literal>NULL</literal>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>right_border</parameter>&nbsp;:</term>
<listitem><simpara> location for right border or <literal>NULL</literal>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xfce-panel-window-set-resize-function"/>xfce_panel_window_set_resize_function ()</title>
<indexterm><primary>xfce_panel_window_set_resize_function</primary></indexterm><programlisting><link linkend="void">void</link>        xfce_panel_window_set_resize_function
                                            (<link linkend="XfcePanelWindow">XfcePanelWindow</link> *window,
                                             <link linkend="XfcePanelWindowResizeFunc">XfcePanelWindowResizeFunc</link> function,
                                             <link linkend="gpointer">gpointer</link> data);</programlisting>
<para>
Set a function to modify resize behaviour of the panel window.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> <link linkend="XfcePanelWindow"><type>XfcePanelWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>function</parameter>&nbsp;:</term>
<listitem><simpara> <link linkend="XfcePanelWindowResizeFunc"><type>XfcePanelWindowResizeFunc</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara> user data
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xfce-panel-window-set-move-function"/>xfce_panel_window_set_move_function ()</title>
<indexterm><primary>xfce_panel_window_set_move_function</primary></indexterm><programlisting><link linkend="void">void</link>        xfce_panel_window_set_move_function
                                            (<link linkend="XfcePanelWindow">XfcePanelWindow</link> *window,
                                             <link linkend="XfcePanelWindowMoveFunc">XfcePanelWindowMoveFunc</link> function,
                                             <link linkend="gpointer">gpointer</link> data);</programlisting>
<para>
Set a function to modify move behaviour of the panel window.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> <link linkend="XfcePanelWindow"><type>XfcePanelWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>function</parameter>&nbsp;:</term>
<listitem><simpara> <link linkend="XfcePanelWindowMoveFunc"><type>XfcePanelWindowMoveFunc</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara> user data
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xfce-panel-window-set-movable"/>xfce_panel_window_set_movable ()</title>
<indexterm><primary>xfce_panel_window_set_movable</primary></indexterm><programlisting><link linkend="void">void</link>        xfce_panel_window_set_movable   (<link linkend="XfcePanelWindow">XfcePanelWindow</link> *window,
                                             <link linkend="gboolean">gboolean</link> movable);</programlisting>
<para>
Set if the panel window can be moved by the user.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> <link linkend="XfcePanelWindow"><type>XfcePanelWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>movable</parameter>&nbsp;:</term>
<listitem><simpara> <literal>TRUE</literal> or <literal>FALSE</literal>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xfce-panel-window-get-movable"/>xfce_panel_window_get_movable ()</title>
<indexterm><primary>xfce_panel_window_get_movable</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>    xfce_panel_window_get_movable   (<link linkend="XfcePanelWindow">XfcePanelWindow</link> *window);</programlisting>
<para>
Check if the panel window can be moved by the user.
By default this is <literal>TRUE</literal>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> <link linkend="XfcePanelWindow"><type>XfcePanelWindow</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <literal>TRUE</literal> if the user is allowed to move <parameter>window</parameter>, <literal>FALSE</literal> if not.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>
<refsect1>
<title>Properties</title>
<refsect2><title><anchor id="XfcePanelWindow--handle-style"/>The &quot;<literal>handle-style</literal>&quot; property</title>
<programlisting>  &quot;handle-style&quot;         <link linkend="XfceHandleStyle">XfceHandleStyle</link>       : Read / Write</programlisting>
<para>
The <link linkend="XfceHandleStyle"><type>XfceHandleStyle</type></link> to use when drawing handles.</para>
<para>

</para><para>Default value: XFCE_HANDLE_STYLE_BOTH</para>
</refsect2>
<refsect2><title><anchor id="XfcePanelWindow--orientation"/>The &quot;<literal>orientation</literal>&quot; property</title>
<programlisting>  &quot;orientation&quot;          <link linkend="GtkOrientation">GtkOrientation</link>        : Read / Write</programlisting>
<para>
The orientation of the window. This the determines the way the handles
are drawn.</para>
<para>

</para><para>Default value: GTK_ORIENTATION_HORIZONTAL</para>
</refsect2>

</refsect1>

<refsect1>
<title>Signals</title>
<refsect2><title><anchor id="XfcePanelWindow-move"/>The &quot;move&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="XfcePanelWindow">XfcePanelWindow</link> *window,
                                            <link linkend="gint">gint</link> x,
                                            <link linkend="gint">gint</link> y,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
Emitted when the user moves the <link linkend="XfcePanelWindow"><type>XfcePanelWindow</type></link> to a new position with
coordinates (<parameter>x</parameter>, <parameter>y</parameter>).</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="XfcePanelWindow"><type>XfcePanelWindow</type></link> which emitted the signal
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> x coordinate of the new position
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> y coordinate of the new position
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="XfcePanelWindow-move-end"/>The &quot;move-end&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="XfcePanelWindow">XfcePanelWindow</link> *window,
                                            <link linkend="gint">gint</link> x,
                                            <link linkend="gint">gint</link> y,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
Emitted when the user stops dragging the <link linkend="XfcePanelWindow"><type>XfcePanelWindow</type></link>. The latest
position has coordinates (<parameter>x</parameter>, <parameter>y</parameter>).</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="XfcePanelWindow"><type>XfcePanelWindow</type></link> which emitted the signal
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x</parameter>&nbsp;:</term>
<listitem><simpara> x coordinate of the new positions
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara> y coordinate of the new position
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="XfcePanelWindow-move-start"/>The &quot;move-start&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="XfcePanelWindow">XfcePanelWindow</link> *window,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
Emitted when the user starts to drag the <link linkend="XfcePanelWindow"><type>XfcePanelWindow</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="XfcePanelWindow"><type>XfcePanelWindow</type></link> which emitted the signal
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="XfcePanelWindow-orientation-changed"/>The &quot;orientation-changed&quot; signal</title>
<programlisting><link linkend="void">void</link>        user_function                  (<link linkend="XfcePanelWindow">XfcePanelWindow</link> *window,
                                            <link linkend="GtkOrientation">GtkOrientation</link> orientation,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>
Emitted when the orientation of the <link linkend="XfcePanelWindow"><type>XfcePanelWindow</type></link> changes.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>window</parameter>&nbsp;:</term>
<listitem><simpara> the object which emitted the signal
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>orientation</parameter>&nbsp;:</term>
<listitem><simpara> the new <link linkend="GtkOrientation"><type>GtkOrientation</type></link> of the window
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>



</refentry>
